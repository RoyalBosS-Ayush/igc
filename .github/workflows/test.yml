name: Test
on:
  workflow_dispatch:
  push:
jobs:
  build:
    name: Build Android App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up our JDK environment # setup JDK environment: mandatory as we need to build  android project
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 19

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install node_modules
        run: yarn install --frozen-lockfile

      - name: Restore Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Run Gradle Build for android/
        run: cd android && ./gradlew assembleRelease --build-cache && cd ..


      - name: Slack Action
        uses: MeilCli/slack-upload-file@v1
        continue-on-error: true
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channels: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: android/app/build/outputs/apk/release/app-arm64-v8a-debug.apk
          file_name: 'app-arm64-v8a-debug.apk'
          file_type: 'apk'
          title: 'InstantDP TEST ACTION Release Apk'
          initial_comment: '${{ github.event_name }} - deployed the apk file to slack'